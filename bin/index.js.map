{"version":3,"file":null,"sources":["../src/helpers.js","../src/alchemist.js","../src/parasite.js","../src/template.js"],"sourcesContent":["/** @module helpers */\r\n\r\n/**\r\n * Lazy way of turning an item into an Array\r\n * @function array$\r\n *\r\n * @param {Object} it - Array like object\r\n *\r\n * @return {Array}\r\n */\r\nvar array$ = function (it) {\r\n\treturn Array.prototype.slice.call(it, 0);\r\n}\r\n\r\n/**\r\n * Appends values to an Array,\r\n * but first replaces undefined values before adding to the end\r\n *\r\n * @function combine\r\n *\r\n * @param {Array} array - list of existing items\r\n * @param {Array} values - proposed additions to the lsit\r\n *\r\n * @return {Array}\r\n */\r\nfunction combine(array, values) {\r\n\tvar index;\r\n\r\n\tarray = array.concat([]);\r\n\r\n\twhile ((index = array.indexOf(undefined)) !== -1 && values.length > 0) {\r\n\t\tarray[index] = values.shift();\r\n\t}\r\n\r\n\treturn array.concat(values);\r\n}\r\n\r\n/**\r\n * Returns a modified function that can be called with currying\r\n *\r\n * @function curry\r\n *\r\n * @see array$\r\n *\r\n * @param {Function} method - function to be curried\r\n *\r\n * @return {Function}\r\n */\r\nfunction curry$(method) {\r\n\tfunction transform(params) {\r\n\t\tvar context;\r\n\t\treturn function() {\r\n\t\t\tvar args = combine(params, array$(arguments));\r\n\t\t\tcontext = context || this;\r\n\r\n\t\t\tif (args.length < method.length || args.some(it => it === undefined )) {\r\n\t\t\t\treturn transform(args);\r\n\t\t\t} else {\r\n\t\t\t\treturn method.apply(context, args);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn method.length <= 1 ? method : transform([]);\r\n}\r\n\r\n/**\r\n * Returns a modified version of a function with negated boolean output\r\n *\r\n * @function negated\r\n *\r\n * @param {Function} it - method to be negated\r\n *\r\n * @return {Function}\r\n */\r\nfunction negated$(it) {\r\n\treturn function() {\r\n\t\treturn !it.apply(this, arguments);\r\n\t};\r\n}\r\n\r\n/**\r\n * Pairs an object into a set of {key, value} arrays\r\n *\r\n * @function pair\r\n *\r\n * @param {Object} object - collection to be paired\r\n *\r\n * @return {Array.<{name: string, value}>}\r\n */\r\nfunction pair(object) {\r\n\treturn Object.keys(object).map((key) => {\r\n\t\treturn {key: key, value: object[key]};\r\n\t});\r\n}\r\n\r\n/**\r\n * Curried shortcut to hasOwnProperty\r\n *\r\n * @function has\r\n *\r\n * @param {Object} object - collection containing property\r\n * @param {String} property - property name to be checked\r\n *\r\n * @return {boolean}\r\n */\r\n\r\nlet has = curry$((object, property) => {\r\n\treturn object.hasOwnProperty(property);\r\n});\r\n\r\n/**\r\n * Recursively brings arrays to the highest level\r\n *\r\n * @function flatten\r\n *\r\n * @param {Array.<Array>} array - container of the set\r\n *\r\n * @return Array\r\n */\r\nfunction flatten(array) {\r\n\tvar isArray;\r\n\tvar toArray;\r\n\tvar fromArray;\r\n\r\n\tisArray = it => it.constructor === Array;\r\n\ttoArray = it => isArray(it) ? it : [it];\r\n\tfromArray = (a, b) => a.concat(b);\r\n\r\n\twhile (array.some(isArray)) {\r\n\t\tarray = array.map(toArray).reduce(fromArray);\r\n\t}\r\n\r\n\treturn array;\r\n}\r\n\r\n/**\r\n * Compares reference object to another object\r\n *\r\n * @function equals\r\n *\r\n * @see has\r\n * @see pair\r\n *\r\n * @param {Object} reference - what should be compared to\r\n * @param {Object} object - what we are comparing\r\n *\r\n * @return {boolean}\r\n */\r\nfunction equals(reference, object) {\r\n\t// Are they of the same type?\r\n\tif (typeof reference !== typeof object ||\n\t\t\treference.constructor !== object.constructor) {\n\t\treturn false;\r\n\t}\r\n\r\n\t// Do we need to check recursively?\r\n\tif (reference.constructor !== Object) {\r\n\t\treturn reference === object;\r\n\t}\r\n\r\n\treturn flatten([\r\n\t\tpair(reference),\r\n\t\tpair(object)\r\n\t])\r\n\t.every((item) => {\r\n\t\treturn\r\n\t\thas(reference)(item.key) &&\r\n\t\thas(object)(item.key) &&\r\n\t\tequals(reference[item.key], object[item.key])\r\n\t});\r\n}\r\n/**\r\n * Checks to see if an item exists (isn't null or undefined)\r\n * @function exists\r\n *\r\n * @param {Object} it - the item in question of existance\r\n *\r\n * @return {boolean}\r\n */\r\nfunction exists(it) {\r\n\treturn it !== undefined && it !== null;\r\n}\r\n\r\n/**\r\n * Attempts to apply mutation to subject, but returns the unmodified subject on failure\r\n *\r\n * @function attempt\r\n *\r\n * @see array$\r\n *\r\n * @param {Function} mutation - mutator function to be called on the subject\r\n * @param {Object} subject - any input that should be mutated\r\n *\r\n * @return {Object}\r\n */\r\nfunction attempt(mutation, subject) {\r\n\tvar parameters;\r\n\tvar alternative;\r\n\tvar response;\r\n\r\n\tparameters = array$(arguments).slice(1);\r\n\talternative = parameters.length === 1 ? parameters[0] : parameters;\r\n\r\n\tresponse = mutation.apply(this, parameters);\r\n\r\n\treturn response || alternative;\r\n}\r\n\r\n/**\r\n * Clones an object\r\n *\r\n * @function clone\r\n *\r\n * @param {Object} object - object to be cloned\r\n *\r\n * @return {Object}\r\n */\r\nfunction clone(object) {\r\n\treturn Object.assign({}, object);\r\n}\r\n\r\n/**\r\n * Injects a transformer into each element of a collection\r\n *\r\n * @name inject(it, transformer)\r\n *\r\n * @see attempt\r\n *\r\n * @param {Object} it - collection\r\n * @param {Function} tranform - mutator function\r\n *\r\n * @return {Object.<string, Function>}\r\n */\r\nfunction inject(it, transform) {\r\n\tvar copy = {};\r\n\r\n\tfunction cycle(key, value) {\r\n\t\tif (value === copy) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (typeof value === 'function') {\r\n\t\t\treturn attempt(transform, value);\r\n\t\t}\r\n\r\n\t\tif (typeof value === 'object') {\r\n\t\t\treturn inject(value, transform);\r\n\t\t}\r\n\r\n\t\t// return value;\r\n\t}\r\n\r\n\tfor (let key in it) {\r\n\t\tcopy[key] = cycle(key, it[key]);\r\n\t}\r\n\r\n\treturn copy;\r\n};\r\n\r\n/**\r\n * Prepares a collection of functions for shipping by currying and adding a not chain\r\n *\r\n * @name prepare(it)\r\n *\r\n * @see inject\r\n * @see negated$\r\n * @see curry$\r\n *\r\n * @param {Object.<string, Function>} it - collection of functions\r\n *\r\n * @return {Object.<string, Function>} - returns curried functions with an additional 'not' chain\r\n */\r\nfunction prepare(it) {\r\n\tvar not, tmp;\r\n\r\n\tnot = inject(it, negated$);\r\n\tnot = inject(not, curry$);\r\n\ttmp = inject(it, curry$);\r\n\r\n\ttmp.not = not;\r\n\r\n\treturn tmp;\r\n}\r\n\r\n/**\r\n * Applies functions to a value and moves down the chain if possible\r\n *\r\n * @function decompose\r\n *\r\n * @see exists\r\n * @see attempt\r\n * @see array$\r\n *\r\n * @param {Array} array - list of functions to be applied\r\n * @param {Object} initial - optional initial item\r\n *\r\n * @return Object\r\n */\r\nfunction decompose(array, initial) {\r\n\tlet composer = (previous, current) => attempt(current, previous);\r\n\tlet reducer = it => array.reduce(composer, initial || it);\r\n\r\n\treturn initial ? reducer(initial) : reducer;\r\n}\r\n\r\nvar is$ = {\r\n\telement: (object) => {\r\n\t\t// return object instanceof Element;\r\n\t\treturn object.nodeType === document.ELEMENT_NODE;\r\n\t},\r\n\r\n\tfragment: (object) => {\r\n\t\t// return object.constructor === DocumentFragment;\r\n\t\treturn object.nodeType === document.DOCUMENT_FRAGMENT_NODE;\r\n\t},\r\n\r\n\ttext: (object) => {\r\n\t\t// return child.constructor === Text;\r\n\t\treturn object.nodeType === document.TEXT_NODE;\r\n\t},\r\n\r\n\tequal: equals,\r\n\texistant: exists\r\n};\r\n\r\nis$ = prepare(is$);\r\n\r\nexport let is = is$;\r\nexport let as = {\r\n\tarray: array$,\r\n\tpair: pair,\r\n\tmethod: curry$,\r\n\tflatten: flatten,\r\n\tdecomposed: decompose,\r\n\tattempt: attempt\r\n};\r\n//\r\n// console.log(is$.not.equal({a: 'b'}, {a: 'b', c: 'd'}));\r\n","import {is, as} from './helpers'\r\n\r\n// transmutating elements =)\r\nexport default class Alchemist {\r\n\tconstructor(element) {\r\n\t\tthis.setElement(element);\r\n\t}\r\n\r\n\tstatic fromQuerySelector(element) {\r\n\t\t// find specified element\r\n\t\tif (typeof element === 'string') {\r\n\t\t\treturn document.querySelector(element);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic fromSizzle(element) {\r\n\t\t// it's a jQuery node\r\n\t\t// if (typeof jQuery !== 'undefined' && element.constructor === jQuery) {\r\n\t\tif (typeof element.get === 'function') {\r\n\t\t\treturn element.get(0);\r\n\t\t}\r\n\t\t// }\r\n\t}\r\n\r\n\tstatic fromTemplate(element) {\r\n\t\t// html5 template content\r\n\r\n\t\tif (is.element(element)) {\r\n\t\t\treturn element.content;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic fromFragment(element) {\r\n\t\t// defragment\r\n\t\tif (is.fragment(element) && element.hasChildNodes()) {\r\n\t\t\treturn element.firstElementChild;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic asElement(element) {\r\n\t\tlet waterfall = [\r\n\t\t\t\tAlchemist.fromQuerySelector,\r\n\t\t\t\tAlchemist.fromSizzle,\r\n\t\t\t\tAlchemist.fromTemplate,\r\n\t\t\t\tAlchemist.fromFragment\r\n\t\t];\r\n\r\n\t\tlet result = as.decomposed(waterfall, element);\r\n\r\n\t\t// element is already provided\r\n\t\tif (result && is.element(result)) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\tsetElement(element) {\r\n\t\tthis.element = Alchemist.asElement(element);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tgetElement() {\r\n\t\treturn this.element;\r\n\t}\r\n}\r\n","// leeches off of the information...\r\nimport {is, as} from './helpers'\r\n\r\nexport default class Parasite {\r\n\tconstructor(mutator) {\r\n\t\tthis.setMutator(mutator);\r\n\t}\r\n\r\n\tgetChildren(element) {\r\n\t\t// Extternal helpers::as.array\r\n\r\n\t\tif (typeof element.content !== 'undefined') {\r\n\t\t\telement = element.content;\r\n\t\t}\r\n\r\n\t\treturn as.array(element.childNodes);\r\n\t}\r\n\r\n\tallChildren(element) {\r\n\t\t// External helpers::is.element helpers::as.flatten\r\n\t\t// Dependencies: getChildren\r\n\r\n\t\tlet map = (function(child) {\r\n\t\t\treturn (!is.element(child)) ? child : this.allChildren(child);\r\n\t\t}).bind(this);\r\n\r\n\t\tlet children = this.getChildren(element).map(map);\r\n\r\n\t\treturn as.flatten(children);\r\n\t}\r\n\r\n\tgetAttributes(element) {\r\n\t\t// External helpers::as.array\r\n\r\n\t\treturn as.array(element.attributes);\r\n\t}\r\n\r\n\tsetChildren(element) {\r\n\t\t// External: helpers::is.element helpers::is.existant\r\n\r\n\t\tlet attributes = this.setAttributes(element);\r\n\t\tlet children = this.getChildren(element);\r\n\r\n\t\tfor (let key in children) {\r\n\t\t\tlet child = children[key];\r\n\t\t\tvar result;\r\n\r\n\t\t\tif (is.text(child)) {\r\n\t\t\t\tif (child.textContent.trim().length > 0) {\r\n\t\t\t\t\tresult = this.mutator.apply(child, [\r\n\t\t\t\t\t\tchild.textContent,\r\n\t\t\t\t\t\targuments[1],\r\n\t\t\t\t\t\tchildren\r\n\t\t\t\t\t]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (is.element(child)) {\r\n\t\t\t\tthis.setChildren(child);\r\n\t\t\t}\r\n\r\n\t\t\tif (is.existant(result)) {\r\n\t\t\t\tchild.textContent = result;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\tsetAttributes(element) {\r\n\t\t// External: helpers::is.existant\r\n\t\t// Dependencies: getAttributes\r\n\r\n\t\tlet attributes = this.getAttributes(element);\r\n\r\n\t\tfor (let index in attributes) {\r\n\t\t\tlet attribute = attributes[index];\r\n\t\t\tvar result;\r\n\t\t\tvar name;\r\n\t\t\tvar value;\r\n\r\n\t\t\tname = attribute.name;\r\n\t\t\tvalue = attribute.value;\r\n\r\n\t\t\tif (element.hasAttribute(name) && value.trim().length > 0) {\r\n\t\t\t\tresult = this.mutator.apply(element, [\r\n\t\t\t\t\tattribute.value,\r\n\t\t\t\t\tattribute.name,\r\n\t\t\t\t\tattributes\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\r\n\t\t\tif (is.existant(result)) {\r\n\t\t\t\telement.setAttribute(attribute.name, result);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\t}\r\n\r\n\tinfect(element) {\r\n\t\t// Dependencies: setChildren\r\n\r\n\t\telement = this.setChildren(element);\r\n\r\n\t\tthis.infection = element;\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\taddChildren(element) {\r\n\t\t// External: helpers::is.not.equal\n\t\t// Dependencies: getChildren\r\n\r\n\t\tvar infection;\r\n\t\tvar children;\r\n\t\tvar sibilings;\r\n\r\n\t\tchildren = this.getChildren(this.infection);\r\n\t\tsibilings = this.getChildren(element);\r\n\r\n\t\tfor (let index in children) {\r\n\t\t\tlet child = children[index];\r\n\t\t\tsibilings.every(it => is.not.equal(child, it)) && element.appendChild(child);\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\tsetMutator(mutator) {\r\n\t\tthis.mutator = mutator;\r\n\t}\r\n}\r\n","import { version } from '../package.json';\r\nimport Alchemist from './alchemist';\r\nimport Parasite from './parasite';\r\n\nlet query = (object, property) => {\r\n\tlet regexp = /[.{}]/g;\r\n\tlet filter = (source) => { return source; };\r\n\tlet reduce = (source, key) => { return source[key]; };\r\n\r\n\treturn property\r\n\t.split(regexp)\r\n\t.filter(filter)\r\n\t.reduce(reduce, object);\r\n};\r\n\r\nlet compile = (value, data) => {\r\n\tlet regexp = /\\{([^}]+)\\}/g;\r\n\tlet replacement = (original, property) => {\r\n\t\treturn query(data, property) || '';\r\n\t};\r\n\r\n\treturn value\r\n\t.trim()\r\n\t.replace(regexp, replacement);\r\n};\r\n\r\n// what we're actually dealing with.\r\nexport default class Template {\r\n\tconstructor(element) {\r\n\t\tthis.pipeline = [];\r\n\t\tthis.mutators = [];\r\n\r\n\t\tthis.sources = [];\r\n\t\tthis.outputs = [];\r\n\r\n\t\tthis.setElement(element);\r\n\t}\r\n\n\tstatic get version() {\n\t\treturn version;\n\t}\n\r\n\tgetElement(element) {\r\n\t\tif (typeof Alchemist !== 'undefined') {\r\n\t\t\telement = Alchemist.asElement(element);\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\tsetElement(element) {\r\n\t\telement = this.getElement(element);\r\n\r\n\t\tthis.element = element;\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\tfromEventSource(source) {\r\n\t\t// on 'data', <pipe>\r\n\t}\r\n\r\n\tfromPromise(action) {\r\n\t\t// then <pipe>\r\n\t}\r\n\r\n\tfromEvent(action) {\r\n\t\t// addEventListener 'click', <pipe>\r\n\t}\r\n\r\n\tfromData(data) {\r\n\t\tvar tracker;\r\n\r\n\t\ttracker = {};\r\n\t\ttracker.source = data;\r\n\t\ttracker.passed = [];\r\n\r\n\t\tthis.sources.push(tracker);\r\n\r\n\t\treturn tracker;\r\n\t}\r\n\r\n\tfromHandler(handler) {\r\n\t\t// <pipe> addEventListener, 'click'\r\n\t}\r\n\r\n\tfromMutator(mutator) {\r\n\t\t// element level transformations\r\n\t}\r\n\r\n\tfromElement(element) {\r\n\t\tthis.outputs.push(element);\r\n\t}\r\n\r\n\troute(flow) {\r\n\t\tvar that;\r\n\r\n\t\tif (flow.constructor === Object) {\r\n\t\t\treturn this.fromData(flow);\r\n\t\t}\r\n\r\n\t\tif (that = this.getElement(flow)) {\r\n\t\t\treturn this.fromElement(that);\r\n\t\t}\r\n\r\n\t\tthis.pipeline.push(flow);\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet parser = ((previous, current) => {\r\n\t\t\tif (previous.passed.indexOf(current) !== -1) {\r\n\t\t\t\treturn previous;\r\n\t\t\t}\r\n\r\n\t\t\tlet response = current.call(previous, previous.source);\r\n\r\n\t\t\tprevious.passed.push(current);\r\n\r\n\t\t\tif (response !== undefined && response !== null) {\r\n\t\t\t\tprevious.source = response;\r\n\t\t\t}\r\n\r\n\t\t\treturn previous;\r\n\t\t}).bind(this);\r\n\r\n\t\tlet mutationParser = ((previous, current) => {\r\n\t\t\tlet response = current(previous);\r\n\r\n\t\t\tif (response !== undefined && response !== null) {\r\n\t\t\t\treturn response;\r\n\t\t\t}\r\n\r\n\t\t\treturn previous;\r\n\t\t}).bind(this);\r\n\r\n\t\tfor (let source of this.sources) {\r\n\t\t\tlet parsed = this.pipeline.reduce(parser, source);\r\n\t\t\tlet cloned = this.element.cloneNode(true);\r\n\r\n\t\t\tlet genetics = ((input) => {\r\n\t\t\t\treturn compile(input, parsed.source);\r\n\t\t\t});\r\n\r\n\t\t\tlet parasite = new Parasite(genetics);\r\n\r\n\t\t\tif (parsed.compiled === undefined) {\r\n\t\t\t\tparasite.infect(cloned);\r\n\t\t\t\tparsed.compiled = parasite.infection;\r\n\t\t\t} else {\r\n\t\t\t\tparasite.infection = parsed.compiled;\r\n\t\t\t}\r\n\r\n\t\t\t// reduce across mutators\r\n\r\n\t\t\tthis.outputs.forEach(parasite.addChildren.bind(parasite));\r\n\t\t}\r\n\t}\r\n\r\n\tpipe(flow) {\r\n\t\tthis.route(flow);\r\n\t\tthis.render();\r\n\t\treturn this;\r\n\t}\r\n}\r\n"],"names":[],"mappings":"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"}