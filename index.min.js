Alchemist=function(e){"use strict";function t(e){this.setElement(e)}var n,i,o;return i=t,n=t.prototype,i.className="Alchemist",o={},o.invalidElement="Invalid or unknown element was specified.",o.invalidElement=new Error(o.invalidElement),n.asElement=function(e){return e.constructor===String&&(e=document.querySelector(e)),"undefined"!=typeof jQuery&&e.constructor===jQuery&&(e=e.get(0)),e instanceof Element&&"TEMPLATE"===e.tagName&&(e=e.content),e instanceof DocumentFragment&&e.hasChildNodes()&&(e=e.firstElementChild),e instanceof Element?e:o.invalidElement},n.setElement=function(e){return this.element=this.asElement(e),this.element},n.getElement=function(){return this.element},n.toString=function(){return"[object "+this.name+"]"},t}(),module.exports=alchemist,Nudist=function(e){"use strict";function t(e){this.expose(e)}var n,i;return i=t,n=t.prototype,i.className="Nudist",n.expose=function(e,t){"function"==typeof define&&define(e.name.toLowerCase(),[],function(){return e}),"undefined"!=typeof module&&(module.exports=e),"undefined"!=typeof window&&(window[e.name]=e),"undefined"!=typeof global&&(global[e.name]=e),t[e.name]=e},n.toString=function(){return"[object "+this.name+"]"},t}(this),function(){if(this.queue)for(var e=0;e<this.queue.length;e++)new Nudist(this.queue[e],this)}.call(this),new Nudist(Nudist,this);var Template,Alchemist;Alchemist=require("./alchemist"),Template=function(e){"use strict";function t(e,t){var n,i,o;return n=/[.{}]/g,i=function(e){return e},o=function(e,t){return e[t]},t.split(n).filter(i).reduce(o,e)}function n(e){return!!e}function i(e){this.initialize(),this.setElement(e)}var o,r;return r=i,o=i.prototype,r.className="Template",o.setElement=function(e){return"undefined"!=typeof Alchemist&&(e=Alchemist.prototype.asElement(e)),this.element=e,e},o.compile=function(e,n){var i,o;return i=/\{([^}]+)\}/g,o=function(e,i){return t(n,i)},e=e.trim(),e=e.replace(i,o)},o.crawl=function(e,t){var n,i,o,r;return o=this,r=arguments,n=function(e){var n,i;return i=function(n){var i;e.hasAttribute(n.name)&&(i=o.compile(n.value,t),e.setAttribute(n.name,i))},n=[].slice.call(e.attributes,0),n.map(i)},i=function(){var n,i,r,u,s=document.TEXT_NODE,c=document.ELEMENT_NODE;return n=function(t,n,i){e.childNodes[n]=o.crawl(t,i)},i=function(t,n,i){var r;r=o.compile(t.textContent,i),e.childNodes[n].textContent=r.textContent},u=function(e,o){e.nodeType===s&&i(e,o,t),e.nodeType===c&&n(e,o,t)},r=[].slice.call(e.childNodes,0),r.map(u)},e.hasAttributes()&&n(e,t),e.hasChildNodes()&&i(e,t),e},o.prepare=function(e){var t,i,o,r;return n(e)?(t=this.element.cloneNode(!0),r=this.crawl(t,e),i=t.innerHTML,o=/\{([^}]+)\}/g,t):void 0},o.pipe=function(){},o.initialize=function(){this.pipeline=[]},o.toString=function(){return"[object "+this.name+"]"},i}(),module.exports=Template;
//# sourceMappingURL=data:application/json;base64,
